<html lang="en-us"><script src="{{cookiecutter.cdn}}pythons.js?cpython3.11#" type=module id="main" data-src="vtx,fs,gui" async defer>#<!--

import sys
import asyncio
import platform
import json
from pathlib import Path

# screen pixels (real, hardware)
WIDTH=1024
HEIGHT=600

# reference/idealized screen pixels
REFX = 1980
REFY = 1080


def ux(v):
    global WIDTH, REFX
    if abs(v)<0.9999999:
        result = int( (float(WIDTH)/100.0) * (v*1000))
        if v<0:
            return WIDTH-result
        return result
    return int( (WIDTH/REFX) * v )

def uy(v):
    global HEIGHT, REFY
    if abs(v)<0.9999999:
        result = int( (float(HEIGHT)/100.0) * (v*1000))
        if v<0:
            return HEIGHT-result
        return result
    return int( (HEIGHT/REFY) * v )

print("""
Loading {{cookiecutter.title}} from {{cookiecutter.archive}}.apk
    Pygbag Version : {{cookiecutter.version}}
    Template Version : 0.2.0
    CDN URL : {{cookiecutter.cdn}}

    Title   : {{cookiecutter.title}}
    Folder  : {{cookiecutter.directory}}
    Authors : {{cookiecutter.authors}}
    SPDX-License-Identifier: {{cookiecutter.spdx}}

""")

# don't rename
async def sitecustomize():
    import embed

    platform.document.body.style.background = "#7f7f7f"

    import pygame

    def compose():
        pygame.display.update()
        window.chromakey(None, *screen.get_colorkey(), 40)

    screen = pygame.display.set_mode([ux(.100),uy(.100)], pygame.SRCALPHA, 32)
    screen.set_colorkey( (0,0,0,0), pygame.RLEACCEL )
    screen.fill( (0,0,0,0) )

    compose()

    platform.window.transfer.hidden = true
    platform.window.canvas.style.visibility = "visible"


    #print(json.dumps(PyConfig, sort_keys=True, indent=4))

    apk = "{{cookiecutter.archive}}.apk"

    bundle = "{{cookiecutter.archive}}"

    # the C or js loader could do that but be explicit.
    appdir = Path(f"/data/data/{bundle}") # /data/data/{{cookiecutter.archive}}
    appdir.mkdir()


    # mount apk

    cfg = {
        "io": "url",
        "type":"mount",
        "mount" : {
            "point" : appdir.as_posix(),
            "path" : "/",
        }

    }

    track = platform.window.MM.prepare(apk, json.dumps(cfg))

    # wait until zip mount + overlayfs is complete

    while not track.ready:
        # resolution of progress bar
        rng = track.len or 10  # avoid div0
        slot = ux(.060)/ rng # 60%
        print(rng,slot,track.pos,track.len)
        marginx = ux(.020) # 20%
        marginy = uy(.045) # 45%
        pygame.draw.rect(screen,(10,10,10),( marginx-ux(10), marginy-uy(10), (rng*slot)+ux(20), uy(110) ) )
        pygame.draw.rect(screen,(0,255,0), ( marginx, marginy, track.pos*slot, uy(90)) )
        compose()
        await asyncio.sleep(.1)

    # preloader will change dir and prepend it to sys.path
    platform.run_main(PyConfig, loaderhome= appdir / "assets", loadermain=None)


    # wait preloading complete
    # that includes wasm compilation of bundled modules
    while embed.counter()<0:
        await asyncio.sleep(.1)


    # test user media interaction
    print("""
    * Waiting for media user engagement : please click/touch page *
""")
    while not platform.window.MM.UME:
        await asyncio.sleep(.1)


    print("105: running main and resuming EventTarget in a few seconds")
    execfile(appdir / "assets" / "main.py")

    # if you don't reach that step
    # your main.py has an infinite sync loop somewhere !
    print("110: ready")


    # makes all queued events arrive after program has looped a few cycles
    while not aio.run_called:
        await asyncio.sleep(.1)

    aio.create_task(platform.EventTarget.process())



asyncio.run( sitecustomize() )



# --></script><head><!--

    {%- if cookiecutter.comment != "" -%}
{{cookiecutter.comment}}
    {% endif %}

--><script type="application/javascript">

config = {
    xtermjs : "{{cookiecutter.xtermjs}}" ,
    _sdl2 : "canvas",
    user_canvas : 1,
    archive : "{{cookiecutter.archive}}",
    gui_debug : 3,
    cdn : "{{cookiecutter.cdn}}",
    autorun : {{cookiecutter.autorun}},
    PYBUILD : "3.11"
}

</script>

    <title>{{cookiecutter.title}}</title>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="mobile-web-app-capable" content="yes">

    <link rel="icon" type="image/png" href="favicon.png" sizes="16x16">
    <link rel="stylesheet" href="{{cookiecutter.cdn}}/styles.css"/>

    <style>
        #status {
            display: inline-block;
            vertical-align: top;
            margin-top: 20px;
            margin-left: 30px;
            font-weight: bold;
            color: rgb(120, 120, 120);
        }

        #progress {
            height: 20px;
            width: 300px;
        }

        div.emscripten { text-align: center; }
        div.emscripten_border { border: 1px solid black; }
        div.thick_border { border: 4px solid black; }

        /* the canvas *must not* have any border or padding, or mouse coords will be wrong */
        canvas.emscripten {
            border: 0px none;
            background-color: transparent;
            width: 100%;
            height=100%;
            z-index:10;

            padding: 0;
            margin: 0 auto;

            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
        }

        body {
            font-family: arial;
            margin: 0;
            padding: none;
            background-color:powderblue;
        }

        /* average size of droid screen 470dp x 320dp  */
        .topright{
           position:absolute;
           top:0px;
           right:0px;
        }

        .topleft {
            position:absolute;
            top: 8px;
            left: 8px;
        }

        .center {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .trinfo{
           position:absolute;
           top:330px;
           right:0px;
           border: 1px solid black;
        }

        .framed{
           position:absolute;
           top:400px;
           right:10px;
           border: 1px solid black;
        }
    </style>

    <script src="{{cookiecutter.cdn}}/browserfs.min.js"></script>

</head>

<body>

    <div id="transfer" align=center>
<!--        <div class="spinner" id='spinner'></div> -->
        <div class="emscripten" id="status">Downloading...</div>
        <div class="emscripten">
            <progress value="0" max="100" id="progress"></progress>
        </div>
    </div>



    <canvas class="emscripten" id="canvas"
width="1px"
height="1px"
    oncontextmenu="event.preventDefault()" tabindex=1>
    </canvas>

    <div id=html></div>

    <div id=crt  class=topright >
        <div id="system" hidden>
            <div class="button-container">
                <button id="aiostop" disabled>AIO ⏏︎</button>
                <button id="aiopaused_true" disabled>AIO ■</button>
                <button id="aiopaused_false" disabled>AIO ▶</button>
                <button id="pygame_mixer_music_pause" disabled>Music ■</button>
            </div>

            <div class="button-container">
                <div id=load_min>min</div>
                <div id=load_avg>avg</div>
                <div id=load_max>max</div>
              <button id="load_rst" disabled>RESET</button>
            </div>

            <div id="level">(battery level unknown)</div>
            <div id="stateBattery">(charging state unknown)</div>

        </div>

        <div id=box class="emscripten_border">
            <div id="info" class="trinfo"></div>

        <iframe id="iframe" class="framed" name="iframe"
width="470px" height="90%"
            sandbox="allow-same-origin allow-top-navigation allow-scripts allow-pointer-lock"
            mozallowfullscreen="true"
            allow="autoplay; fullscreen *; geolocation; microphone; camera; midi; monetization; xr-spatial-tracking; gamepad; gyroscope; accelerometer; xr; cross-origin-isolated"
frameborder="1"
            src="{{cookiecutter.cdn}}empty.html"
            msallowfullscreen="true"
            scrolling="yes"
            allowfullscreen="true"
            webkitallowfullscreen="true"
            allowtransparency="true" style="z-index: 20">
        </iframe>
        </div>
    </div>



    <div id="dlg" hidden>
        <input type="file" id="dlg_multifile" multiple accept="image/*">
        <label for="dlg_multifile">Select files</label>
    </div>

    <div id="pyconsole">
        <div id="terminal" tabIndex=1 align="left"><p></div>
    </div>

    <script type="application/javascript">
    function custom_onload(debug_hidden) {
        console.log(__FILE__, "custom_onload")
        pyconsole.hidden = debug_hidden
        system.hidden = debug_hidden
        transfer.hidden = debug_hidden
        info.hidden = debug_hidden
        box.hidden =  debug_hidden
    }

    function debug() {
        python.config.debug = true
        custom_onload(false)
        Module.PyRun_SimpleString("shell.uptime()")
        window_resize()
    }

    function custom_prerun(){
        // no python main and no (MEMFS + VFS) yet.
        console.log(__FILE__, "custom_prerun")
    }

    function custom_postrun(){
        // python main and no VFS filesystem yet.
        console.log(__FILE__, "custom_prerun")
    }

    function info_online(url, data) {
        // display info about current APK
        fetch( url /*, options */)
            .then((response) => response.text())
            .then((html) => {
                document.getElementById("info").innerHTML = html || data;
        })
        .catch((error) => {
            console.warn(error);
        });
    }


    function info_inline(data){
        document.getElementById("info").innerHTML = data
    }

    var ifram_dom

    function childLoaded() { ifram_dom = childGetElementById('someid');}

    function frame_online(url) {
        window.frames["iframe"].location = url;
    }
    </script>



</body>
</html>
